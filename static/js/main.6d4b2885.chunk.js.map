{"version":3,"sources":["theme/theme.ts","../../main/dist/index.es.js","formModel.ts","ChangePassword.tsx","index.tsx"],"names":["theme","createTheme","palette","type","common","black","white","background","paper","default","error","light","main","dark","primary","purple","secondary","contrastThreshold","tonalOffset","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","initializeState","formModel","state","keys","reduce","inputValues","inputName","inputErrors","hasError","message","dirtyInputs","requiredInputs","currentPassphrase","value","required","newPassphrase","validator","values","verifyPassphrase","passphrase","ChangePassword","formSubmitCallback","_a","useState","setValues","_b","errors","setErrors","_c","_isDirty","setIsDirty","_d","isDisabled","setIsDisabled","_e","isSubmitted","setIsSubmitted","_f","_isTouched","setIsTouched","useEffect","isDirtyInputs","inputs","forEach","requiredMessage","clearMessage","_isDirtyInput","inputValue","_validatorFunc","validatorMessage","errorMessage","isFormInvalid","useCallback","_isRequired","isRequiredInputs","some","key","handleOnChange","event","currentTarget","name","handleOnSubmit","preventDefault","useForm","Container","maxWidth","Grid","className","href","target","alt","src","onSubmit","FormLabel","FormGroup","FormControl","TextField","label","color","size","variant","onChange","FormHelperText","Alert","severity","action","Button","disabled","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6d4b2885.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\n\nexport const theme = createTheme({\n  palette: {\n    type: 'light',\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    background: {\n      paper: '#424242',\n      default: '#303030',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n    },\n    primary: {\n      main: purple[300],\n    },\n    secondary: {\n      main: purple[400],\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n});\n","import { useState, useEffect, useCallback } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/**\n * Reactive form management and input field validation hook\n *\n * @param {object} formModel - initial form model with optional validation function.\n * @param {function} formSubmitCallback - function to run after form validation and submission.\n * @returns {{handleOnChange: function, handleOnSubmit: function, values: object, errors: object, isDisabled: boolean, isSubmitted: boolean}}\n **/\nfunction useForm(formModel, formSubmitCallback) {\n    var _a = useState(initializeState(formModel, 'values')), values = _a[0], setValues = _a[1];\n    var _b = useState(initializeState(formModel, 'errors')), errors = _b[0], setErrors = _b[1];\n    var _c = useState(initializeState(formModel, '_isDirty')), _isDirty = _c[0], setIsDirty = _c[1];\n    var _d = useState(true), isDisabled = _d[0], setIsDisabled = _d[1];\n    var _e = useState(false), isSubmitted = _e[0], setIsSubmitted = _e[1];\n    var _f = useState(false), _isTouched = _f[0], setIsTouched = _f[1];\n    useEffect(function () {\n        /*\n         validate all dirty input field via the validator\n         function when the values state changes\n        */\n        if (_isTouched) {\n            var isDirtyInputs = Object.keys(_isDirty).reduce(function (inputs, inputName) {\n                if (_isDirty[inputName])\n                    inputs[inputName] = _isDirty[inputName];\n                return inputs;\n            }, {});\n            Object.keys(isDirtyInputs).forEach(function (inputName) {\n                var error;\n                var requiredMessage = { hasError: true, message: 'This field is required' };\n                var clearMessage = { hasError: false, message: '' };\n                var _isDirtyInput = formModel[inputName];\n                var inputValue = values[inputName];\n                error = _isDirtyInput.required && !inputValue ? requiredMessage : clearMessage;\n                if (_isDirtyInput['validator']) {\n                    // proceed only if the input field has a validator function\n                    var _validatorFunc = _isDirtyInput['validator'];\n                    var validatorMessage = {\n                        hasError: true,\n                        message: _validatorFunc(inputValue, values),\n                    };\n                    var errorMessage = inputValue ? validatorMessage : requiredMessage;\n                    error = _validatorFunc(inputValue, values) ? errorMessage : clearMessage;\n                }\n                if (errors[inputName].message !== error.message) {\n                    // proceed only after comparing previous error message value and current value\n                    setErrors(function (errors) {\n                        var _a;\n                        return (__assign(__assign({}, errors), (_a = {}, _a[inputName] = error, _a)));\n                    });\n                }\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [values]);\n    var isFormInvalid = useCallback(function () {\n        /*\n         the form will be invalid if one of its fields\n         has some errors or a required input field is empty\n        */\n        var _isRequired = initializeState(formModel, '_isRequired');\n        // {_isRequired} is read-only and doesn't require a useState\n        var isRequiredInputs = Object.keys(_isRequired).reduce(function (inputs, inputName) {\n            if (_isRequired[inputName])\n                inputs[inputName] = _isRequired[inputName];\n            return inputs;\n        }, {});\n        var formHasErrors = function () { return Object.values(errors).some(function (error) { return error.hasError; }); };\n        var isRequiredInputEmpty = function () { return Object.keys(isRequiredInputs).some(function (key) { return !values[key]; }); };\n        return formHasErrors() || isRequiredInputEmpty();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [errors]);\n    useEffect(function () {\n        /*\n         this will be fired after every change in the errors\n         state to be able to enable/disable the submit button\n        */\n        if (_isTouched) {\n            setIsDisabled(isFormInvalid());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [errors]);\n    var handleOnChange = useCallback(function (event) {\n        setIsTouched(true);\n        var inputName = event.currentTarget.name;\n        var inputValue = event.currentTarget.value;\n        if (formModel[inputName]) {\n            // proceed only if the change input exits in the formModel\n            setValues(function (values) {\n                var _a;\n                return (__assign(__assign({}, values), (_a = {}, _a[inputName] = inputValue, _a)));\n            });\n            if (_isDirty[inputName] === false) {\n                // proceed only if input field is not dirty\n                setIsDirty(function (_isDirty) {\n                    var _a;\n                    return (__assign(__assign({}, _isDirty), (_a = {}, _a[inputName] = true, _a)));\n                });\n            }\n        }\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [values]);\n    var handleOnSubmit = useCallback(function (event) {\n        event.preventDefault();\n        if (!isFormInvalid()) {\n            formSubmitCallback();\n            setIsSubmitted(true);\n        }\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isFormInvalid, values]);\n    return {\n        handleOnChange: handleOnChange,\n        handleOnSubmit: handleOnSubmit,\n        values: values,\n        errors: errors,\n        isSubmitted: isSubmitted,\n        isDisabled: isDisabled,\n    };\n}\nfunction initializeState(formModel, state) {\n    /*\n     initialize a default state for {errors} and {_isDirty} where\n     {values} and {_isRequired} are pulled from the formModel\n    */\n    switch (state) {\n        case 'values':\n            return Object.keys(formModel).reduce(function (inputValues, inputName) {\n                inputValues[inputName] = formModel[inputName]['value'];\n                return inputValues;\n            }, {});\n        case 'errors':\n            return Object.keys(formModel).reduce(function (inputErrors, inputName) {\n                inputErrors[inputName] = { hasError: false, message: '' };\n                return inputErrors;\n            }, {});\n        case '_isDirty':\n            return Object.keys(formModel).reduce(function (dirtyInputs, inputName) {\n                dirtyInputs[inputName] = false;\n                return dirtyInputs;\n            }, {});\n        case '_isRequired':\n            return Object.keys(formModel).reduce(function (requiredInputs, inputName) {\n                requiredInputs[inputName] = formModel[inputName]['required'];\n                return requiredInputs;\n            }, {});\n        default:\n            return {};\n    }\n}\n\nexport { useForm };\n","import { FormModelType } from '../../main/src';\n\nexport const formModel: FormModelType = {\n  currentPassphrase: {\n    value: '',\n    required: true,\n  },\n  newPassphrase: {\n    value: '',\n    required: true,\n    validator: (newPassphrase, values) => {\n      if (newPassphrase === values?.currentPassphrase) {\n        return 'New password must be different from current password';\n      } else if (newPassphrase.length <= 5) {\n        return 'Password must be at least 6 characters long';\n      } else if (newPassphrase !== values?.verifyPassphrase) {\n        return 'Passwords do not match';\n      } else return '';\n    },\n  },\n  verifyPassphrase: {\n    value: '',\n    required: true,\n    validator: (passphrase, values) => {\n      return passphrase !== values?.newPassphrase ? 'Passwords do not match' : '';\n    },\n  },\n};\n\nexport const emptyFormModel: FormModelType = {\n  currentPassphrase: {\n    value: '',\n    required: true,\n  },\n  newPassphrase: {\n    value: '',\n    required: true,\n  },\n  verifyPassphrase: {\n    value: '',\n    required: true,\n  },\n};\n","import {\n  Button,\n  Container,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  TextField,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useForm, ValuesType } from 'reactjs-use-form';\nimport './theme/styles.css';\nimport { formModel } from './formModel';\n\n\nexport function ChangePassword(): any {\n  const { values, errors, handleOnChange, handleOnSubmit, isSubmitted, isDisabled } = useForm(formModel, handleSubmit);\n  const { currentPassphrase, newPassphrase, verifyPassphrase }: ValuesType = values;\n\n  function handleSubmit() {\n    // formSubmitCallback();\n  }\n\n  return (\n    <Container maxWidth='xs'>\n      <Grid className=''>\n        <Container maxWidth='xs' className='header-container'>\n          <h1>useForm</h1>\n          <div className='social-links'>\n            <a href='https://github.com/amiroff157/reactjs-use-form' target='_blank'>\n              <img alt='GitHub Repo stars'\n                   src='https://img.shields.io/github/stars/amiroff157/reactjs-use-form?label=GitHub&style=social' />\n            </a>\n            <a href='https://www.npmjs.com/package/reactjs-use-form' target='_blank'>\n              <img alt='npm' src='https://img.shields.io/npm/v/reactjs-use-form?label=NPM&style=social' />\n            </a>\n          </div>\n          <span className='banner'><span>(📋, ⚙️) ⇒ ⚛️</span></span>\n        </Container>\n        <form onSubmit={handleOnSubmit}>\n          <FormLabel className='form-label'>🔐 Change your passphrase</FormLabel>\n          <FormGroup>\n            <FormControl>\n              <TextField\n                required={true}\n                label='Current Passphrase'\n                type='password'\n                name='currentPassphrase'\n                color='primary'\n                size='small'\n                variant='filled'\n                error={errors.currentPassphrase.hasError}\n                value={currentPassphrase}\n                onChange={handleOnChange} />\n              <FormHelperText\n                error={errors.currentPassphrase.hasError}>{errors.currentPassphrase.message}\n              </FormHelperText>\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormControl>\n              <TextField\n                required={true}\n                label='New Passphrase'\n                type='password'\n                name='newPassphrase'\n                color='primary'\n                size='small'\n                variant='filled'\n                error={errors.newPassphrase.hasError}\n                value={newPassphrase}\n                onChange={handleOnChange} />\n              <FormHelperText error={errors.newPassphrase.hasError}>{errors.newPassphrase.message}</FormHelperText>\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormControl>\n              <TextField\n                required={true}\n                label='Verify Passphrase'\n                type='password'\n                name='verifyPassphrase'\n                color='primary'\n                size='small'\n                variant='filled'\n                error={errors.verifyPassphrase.hasError}\n                value={verifyPassphrase}\n                onChange={handleOnChange} />\n              <FormHelperText error={errors.verifyPassphrase.hasError}>\n                {errors.verifyPassphrase.message}\n              </FormHelperText>\n            </FormControl>\n          </FormGroup>\n          {isSubmitted ? <Alert variant='standard' severity='success' action='Passphrase has been changed!' /> : null}\n          <Grid className='footer'>\n            <Button\n              variant='contained'\n              size='large'\n              color='secondary'\n              type='submit'\n              disabled={isDisabled}>\n              Submit\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './theme/theme';\nimport { ChangePassword } from './ChangePassword';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <ChangePassword />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}