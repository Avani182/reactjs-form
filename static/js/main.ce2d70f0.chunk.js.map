{"version":3,"sources":["theme/theme.ts","formModel.ts","ChangePassword.tsx","index.tsx"],"names":["theme","createTheme","palette","type","common","black","white","background","paper","default","error","light","main","dark","primary","purple","secondary","contrastThreshold","tonalOffset","formModel","currentPassphrase","value","required","newPassphrase","validator","values","length","verifyPassphrase","passphrase","ChangePassword","passwordInputRef","useRef","useForm","errors","handleOnChange","handleOnSubmit","isSubmitted","isDisabled","useEffect","current","focus","Container","maxWidth","Grid","className","onSubmit","FormLabel","FormGroup","FormControl","TextField","label","name","color","size","variant","hasError","onChange","ref","FormHelperText","message","Alert","severity","action","Button","disabled","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ce2d70f0.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\n\nexport const theme = createTheme({\n  palette: {\n    type: 'light',\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    background: {\n      paper: '#424242',\n      default: '#303030',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n    },\n    primary: {\n      main: purple[300],\n    },\n    secondary: {\n      main: purple[400],\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n});\n","import { FormModelType } from '../../src';\n\nexport const formModel: FormModelType = {\n  currentPassphrase: {\n    value: '',\n    required: true,\n  },\n  newPassphrase: {\n    value: '',\n    required: true,\n    validator: (newPassphrase, values) => {\n      if (newPassphrase === values?.currentPassphrase) {\n        return 'New password must be different from current password';\n      } else if (newPassphrase.length <= 5) {\n        return 'Password must be at least 6 characters long';\n      } else if (newPassphrase !== values?.verifyPassphrase) {\n        return 'Passwords do not match';\n      } else return '';\n    },\n  },\n  verifyPassphrase: {\n    value: '',\n    required: true,\n    validator: (passphrase, values) => {\n      return passphrase !== values?.newPassphrase ? 'Passwords do not match' : '';\n    },\n  },\n};\n\nexport const emptyFormModel: FormModelType = {\n  currentPassphrase: {\n    value: '',\n    required: true,\n  },\n  newPassphrase: {\n    value: '',\n    required: true,\n  },\n  verifyPassphrase: {\n    value: '',\n    required: true,\n  },\n};\n","import { useEffect, useRef } from 'react';\n\nimport {\n  Button,\n  Container,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  TextField,\n} from '@material-ui/core/';\nimport { Alert } from '@material-ui/lab';\nimport { useForm, ValuesType } from 'reactjs-use-form';\nimport './theme/styles.css';\nimport { formModel } from './formModel';\n\n\nexport function ChangePassword(): any {\n  const passwordInputRef = useRef<any>(null);\n  const { values, errors, handleOnChange, handleOnSubmit, isSubmitted, isDisabled } = useForm(formModel, handleSave);\n  const { currentPassphrase, newPassphrase, verifyPassphrase }: ValuesType = values;\n\n  useEffect(() => {\n    if (passwordInputRef.current) passwordInputRef.current.focus();\n  }, []);\n\n\n  function handleSave() {\n    // save changes\n  }\n\n\n  return (\n    <Container maxWidth='xs'>\n      <Grid className=''>\n        <Container maxWidth='xs'>\n          <h1>useForm</h1>\n          <span className='banner'><span>(üìã, ‚öôÔ∏è) ‚áí ‚öõÔ∏è</span></span>\n        </Container>\n        <form onSubmit={handleOnSubmit}>\n          <FormLabel className='form-label'>üîê Change your passphrase</FormLabel>\n          <FormGroup>\n            <FormControl>\n              <TextField\n                required={true}\n                label='Current Passphrase'\n                type='password'\n                name='currentPassphrase'\n                color='primary'\n                size='small'\n                variant='filled'\n                error={errors.currentPassphrase.hasError}\n                value={currentPassphrase}\n                onChange={handleOnChange}\n                ref={passwordInputRef} />\n              <FormHelperText\n                error={errors.currentPassphrase.hasError}>{errors.currentPassphrase.message}</FormHelperText>\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormControl>\n              <TextField\n                required={true}\n                label='New Passphrase'\n                type='password'\n                name='newPassphrase'\n                color='primary'\n                size='small'\n                variant='filled'\n                error={errors.newPassphrase.hasError}\n                value={newPassphrase}\n                onChange={handleOnChange} />\n              <FormHelperText error={errors.newPassphrase.hasError}>{errors.newPassphrase.message}</FormHelperText>\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormControl>\n              <TextField\n                required={true}\n                label='Verify Passphrase'\n                type='password'\n                name='verifyPassphrase'\n                color='primary'\n                size='small'\n                variant='filled'\n                error={errors.verifyPassphrase.hasError}\n                value={verifyPassphrase}\n                onChange={handleOnChange} />\n              <FormHelperText error={errors.verifyPassphrase.hasError}>\n                {errors.verifyPassphrase.message}\n              </FormHelperText>\n            </FormControl>\n          </FormGroup>\n          {isSubmitted ? <Alert variant='standard' severity='success' action='Password changed!' /> : null}\n          <Grid className='footer'>\n            <Button\n              variant='contained'\n              size='large'\n              color='secondary'\n              type='submit'\n              disabled={isDisabled}>\n              <span>Save Changes</span>\n            </Button>\n          </Grid>\n        </form>\n      </Grid>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './theme/theme';\nimport { ChangePassword } from './ChangePassword';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <ChangePassword />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}